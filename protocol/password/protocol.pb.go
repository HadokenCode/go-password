// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protocol.proto

package password

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Error struct {
	Code    int32  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *Error) Reset()                    { *m = Error{} }
func (m *Error) String() string            { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()               {}
func (*Error) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Error) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type PasswordReq struct {
	Password string `protobuf:"bytes,1,opt,name=password" json:"password,omitempty"`
	Hash     string `protobuf:"bytes,2,opt,name=hash" json:"hash,omitempty"`
}

func (m *PasswordReq) Reset()                    { *m = PasswordReq{} }
func (m *PasswordReq) String() string            { return proto.CompactTextString(m) }
func (*PasswordReq) ProtoMessage()               {}
func (*PasswordReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *PasswordReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *PasswordReq) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type EncodedPasswordRes struct {
	Error *Error `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Hash  string `protobuf:"bytes,2,opt,name=hash" json:"hash,omitempty"`
}

func (m *EncodedPasswordRes) Reset()                    { *m = EncodedPasswordRes{} }
func (m *EncodedPasswordRes) String() string            { return proto.CompactTextString(m) }
func (*EncodedPasswordRes) ProtoMessage()               {}
func (*EncodedPasswordRes) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *EncodedPasswordRes) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *EncodedPasswordRes) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type PasswordValidationRes struct {
	Error *Error `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Valid bool   `protobuf:"varint,2,opt,name=valid" json:"valid,omitempty"`
}

func (m *PasswordValidationRes) Reset()                    { *m = PasswordValidationRes{} }
func (m *PasswordValidationRes) String() string            { return proto.CompactTextString(m) }
func (*PasswordValidationRes) ProtoMessage()               {}
func (*PasswordValidationRes) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *PasswordValidationRes) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *PasswordValidationRes) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

type PongRes struct {
	Timestamp *google_protobuf.Timestamp `protobuf:"bytes,1,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (m *PongRes) Reset()                    { *m = PongRes{} }
func (m *PongRes) String() string            { return proto.CompactTextString(m) }
func (*PongRes) ProtoMessage()               {}
func (*PongRes) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *PongRes) GetTimestamp() *google_protobuf.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func init() {
	proto.RegisterType((*Error)(nil), "password.Error")
	proto.RegisterType((*PasswordReq)(nil), "password.PasswordReq")
	proto.RegisterType((*EncodedPasswordRes)(nil), "password.EncodedPasswordRes")
	proto.RegisterType((*PasswordValidationRes)(nil), "password.PasswordValidationRes")
	proto.RegisterType((*PongRes)(nil), "password.PongRes")
}

func init() { proto.RegisterFile("protocol.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 246 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0xd0, 0x51, 0x4b, 0xc3, 0x30,
	0x10, 0x00, 0x60, 0x2a, 0xd6, 0xad, 0x37, 0x50, 0x08, 0x0a, 0xa5, 0x2f, 0x8e, 0x82, 0xb0, 0xa7,
	0x0c, 0x14, 0xc1, 0x17, 0x9f, 0x64, 0xcf, 0x8e, 0x30, 0x7c, 0xcf, 0x96, 0x98, 0x15, 0xda, 0x5e,
	0x4d, 0xa2, 0xfe, 0x7d, 0xc9, 0xa5, 0xe9, 0x5e, 0x7c, 0xd9, 0xdb, 0x5d, 0xee, 0xf2, 0xdd, 0x71,
	0x70, 0x3d, 0x58, 0xf4, 0x78, 0xc0, 0x96, 0x53, 0xc0, 0xe6, 0x83, 0x74, 0xee, 0x17, 0xad, 0xaa,
	0xee, 0x0d, 0xa2, 0x69, 0xf5, 0x9a, 0xde, 0xf7, 0xdf, 0x9f, 0x6b, 0xdf, 0x74, 0xda, 0x79, 0xd9,
	0x0d, 0xb1, 0xb5, 0x7e, 0x86, 0x7c, 0x63, 0x2d, 0x5a, 0xc6, 0xe0, 0xf2, 0x80, 0x4a, 0x97, 0xd9,
	0x32, 0x5b, 0xe5, 0x82, 0x62, 0x56, 0xc2, 0xac, 0xd3, 0xce, 0x49, 0xa3, 0xcb, 0x8b, 0x65, 0xb6,
	0x2a, 0x44, 0x4a, 0xeb, 0x57, 0x58, 0x6c, 0xc7, 0x19, 0x42, 0x7f, 0xb1, 0x0a, 0xa6, 0x91, 0x04,
	0x14, 0x62, 0xca, 0x03, 0x7c, 0x94, 0xee, 0x38, 0x0a, 0x14, 0xd7, 0xef, 0xc0, 0x36, 0x7d, 0x18,
	0xa1, 0x4e, 0x8a, 0x63, 0x0f, 0x90, 0xeb, 0xb0, 0x0b, 0x11, 0x8b, 0xc7, 0x1b, 0x9e, 0x0c, 0x4e,
	0x2b, 0x8a, 0x58, 0xfd, 0x17, 0xdc, 0xc1, 0x5d, 0x92, 0x3e, 0x64, 0xdb, 0x28, 0xe9, 0x1b, 0xec,
	0xcf, 0x30, 0x6f, 0x21, 0xff, 0x09, 0xff, 0x08, 0x9d, 0x8b, 0x98, 0xd4, 0x6f, 0x30, 0xdb, 0x62,
	0x6f, 0x82, 0xf3, 0x02, 0xc5, 0x74, 0xba, 0xd1, 0xaa, 0x78, 0x3c, 0x2e, 0x4f, 0xc7, 0xe5, 0xbb,
	0xd4, 0x21, 0x4e, 0xcd, 0xfb, 0x2b, 0x2a, 0x3f, 0xfd, 0x05, 0x00, 0x00, 0xff, 0xff, 0x8a, 0xe0,
	0x7a, 0x5f, 0xa5, 0x01, 0x00, 0x00,
}
