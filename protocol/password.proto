syntax = "proto3";

package password;

import "protocol.proto";

// RPC Gateway
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

service Password {

  // Encode a given password using default Butcher strategy
  rpc Encode (PasswordReq) returns (EncodedPasswordRes) {
    option (google.api.http) = {
      post: "/v1/password"
      body: "*"
    };
  };

  // Validate a password hash encoded by Butcher
  rpc Validate (PasswordReq) returns (PasswordValidationRes) {
    option (google.api.http) = {
      post: "/v1/validate"
      body: "*"
    };
  };

  // Ping the password server. Example for empty query
  rpc Ping(google.protobuf.Empty) returns (PongRes) {
    option (google.api.http) = {
      get: "/v1/ping"
    };
  };

}
